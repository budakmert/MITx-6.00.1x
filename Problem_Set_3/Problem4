# Problem 4 - The Game

# (15/15 points)
# Now you will implement the function hangman, which takes one parameter - the secretWord the user is to guess. This starts up an
# interactive game of Hangman between the user and the computer. Be sure you take advantage of the three helper functions,
# isWordGuessed, getGuessedWord, and getAvailableLetters, that you've defined in the previous part.

# Hints:
# You should start by noticing where we're using the provided functions (at the top of ps3_hangman.py) to load the words and pick a
# random one. Note that the functions loadWords and chooseWord should only be used on your local machine, not in the tutor. When
# you enter in your solution in the tutor, you only need to give your hangman function.

# Consider using lower() to convert user input to lower case. For example:
# guess = 'A'
# guessInLowerCase = guess.lower()
# Consider writing additional helper functions if you need them!

# There are four important pieces of information you may wish to store:
# secretWord: The word to guess.
# lettersGuessed: The letters that have been guessed so far.
# mistakesMade: The number of incorrect guesses made so far.
# availableLetters: The letters that may still be guessed. Every time a player guesses a letter, the guessed letter must be removed
# from availableLetters (and if they guess a letter that is not in availableLetters, you should print a message telling them they've
# already guessed that - so try again!).

# Note that if you choose to use the helper functions isWordGuessed, getGuessedWord, or getAvailableLetters, you do not need to
# paste your definitions in the box. We have supplied our implementations of these functions for your use in this part of the
# problem. If you use additional helper functions, you will need to paste those definitions here.

# Your function should include calls to input to get the user's guess.

def hangman(secretWord):
    print('Welcome to the game Hangman!')
    print('I am thinking of a word that is '+ str(len(secretWord)) + ' letters long.')
    
    def getAvailableLetters(lettersGuessed):
        alfabe = 'abcdefghijklmnopqrstuvwxyz'
        if len(lettersGuessed) != 0:
            s= list(alfabe)
            for i in range(0,len(lettersGuessed)):
                if lettersGuessed[i] in list(alfabe):
                    y = s
                    if lettersGuessed[i] in list(alfabe) and lettersGuessed[i] in y:
                        x =y.index(lettersGuessed[i])
                        y[x] = ''
                        y = "".join(y)
                    else: 
                        y[x] = ''
                        y = "".join(y)
            return(y)
        else:
            return(alfabe)
    def getGuessedWord(secretWord, lettersGuessed):
        x = list((secretWord))
        y = '_ ' * len(secretWord)
        s = list(y)
        for i in range(0,len(list(secretWord))):
            if x[i] in lettersGuessed:
                s=list(s)
                s[i*2] = x[i]
                s = "".join(s)
            else: 
                s=list(s)
                s[i] = s[i]
                s = "".join(s)
        if lettersGuessed[-1] in secretWord:
            return ('Good guess : ' + str(s))    
        elif lettersGuessed[-1] not in secretWord: 
            return ('Oops! That letter is not in my word:' + str(s))

    
    print('-----------')
    
    def sor():
        hak = 8
        lettersGuessed = []
        while hak >0:
            print('You have ' + str(hak) + ' guesses left.')

            print('Available letters: ' + getAvailableLetters(lettersGuessed) )

            guess = input('Please guess a letter:')
            
            guess = guess.lower()
            
            if guess not in getAvailableLetters(lettersGuessed):
                a = str((getGuessedWord(secretWord, lettersGuessed)))[(str((getGuessedWord(secretWord, lettersGuessed))).find(':'))+1:]
                print(('''Oops! You've already guessed that letter:''') + a )
                print('-----------')
            elif guess in getAvailableLetters(lettersGuessed):
                lettersGuessed.append(guess)
                      
                getAvailableLetters(lettersGuessed)
                print(getGuessedWord(secretWord, lettersGuessed))

                if ('Good guess :') in str((getGuessedWord(secretWord, lettersGuessed))):
                    hak = hak 
                else:
                    hak = hak -1 
                print('-----------')
            
            a = str((getGuessedWord(secretWord, lettersGuessed)))[(str((getGuessedWord(secretWord, lettersGuessed))).find(':'))+1:]
            a = [a.replace(' ', '') for el in a]
            if a[0] == secretWord:
                ans = ('Congratulations, you won!')
                return ans
                break
        if hak == 0:
            ans =('Sorry, you ran out of guesses. The word was else.')
            return ans
    print(sor())
    
